[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink.c.obj
[3/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Elmou\Desktop\iweihnachtsbaum\sample_project\build\bootloader\esp-idf\esptool_py && C:\Users\Elmou\esp\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/Elmou/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Elmou/Desktop/iweihnachtsbaum/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable main.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/Elmou/Desktop/iweihnachtsbaum/sample_project/build/main.bin
[8/9] cmd.exe /C "cd /D C:\Users\Elmou\Desktop\iweihnachtsbaum\sample_project\build\esp-idf\esptool_py && C:\Users\Elmou\esp\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/Elmou/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Elmou/Desktop/iweihnachtsbaum/sample_project/build/partition_table/partition-table.bin C:/Users/Elmou/Desktop/iweihnachtsbaum/sample_project/build/main.bin"
main.bin binary size 0x2b420 bytes. Smallest app partition is 0x100000 bytes. 0xd4be0 bytes (83%) free.
[8/9] cmd.exe /C "cd /D C:\Users\Elmou\esp\esp-idf\components\esptool_py && C:\Users\Elmou\esp\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Elmou/esp/esp-idf -D SERIAL_TOOL=C:/Users/Elmou/esp/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Users/Elmou/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Elmou/Desktop/iweihnachtsbaum/sample_project/build -P C:/esptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port COM3
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:3a:f2:ba:43:e0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16335...
Writing at 0x00001000... (100 %)
Wrote 26640 bytes (16335 compressed) at 0x00001000 in 0.9 seconds (effective 239.5 kbit/s)...
Hash of data verified.
Compressed 177184 bytes to 94900...
Writing at 0x00010000... (16 %)
Writing at 0x0001c216... (33 %)
Writing at 0x00021cbd... (50 %)
Writing at 0x00027560... (66 %)
Writing at 0x0002ed28... (83 %)
Writing at 0x00036075... (100 %)
Wrote 177184 bytes (94900 compressed) at 0x00010000 in 2.7 seconds (effective 521.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 354.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
Users/Elmou/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
